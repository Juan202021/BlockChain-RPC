/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _BLOCKCHAIN_H_RPCGEN
#define _BLOCKCHAIN_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct tipo_salida {
	long cant_ceros;
	char *texto;
	u_long inicio;
	u_long final;
};
typedef struct tipo_salida tipo_salida;

struct resultado_hash {
	u_long relleno;
	int encontrado;
};
typedef struct resultado_hash resultado_hash;

#define BLOCKCHAIN_PROGRAM 0x32130000
#define BLOCKCHAIN_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define BLOCKCHAINPROCEDURE 1
extern  tipo_salida * blockchainprocedure_1(void *, CLIENT *);
extern  tipo_salida * blockchainprocedure_1_svc(void *, struct svc_req *);
#define ENVIAR_RESULTADO 2
extern  void * enviar_resultado_1(resultado_hash *, CLIENT *);
extern  void * enviar_resultado_1_svc(resultado_hash *, struct svc_req *);
extern int blockchain_program_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define BLOCKCHAINPROCEDURE 1
extern  tipo_salida * blockchainprocedure_1();
extern  tipo_salida * blockchainprocedure_1_svc();
#define ENVIAR_RESULTADO 2
extern  void * enviar_resultado_1();
extern  void * enviar_resultado_1_svc();
extern int blockchain_program_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_tipo_salida (XDR *, tipo_salida*);
extern  bool_t xdr_resultado_hash (XDR *, resultado_hash*);

#else /* K&R C */
extern bool_t xdr_tipo_salida ();
extern bool_t xdr_resultado_hash ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_BLOCKCHAIN_H_RPCGEN */
